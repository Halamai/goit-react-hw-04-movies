{"version":3,"sources":["Components/cast/Cast.js","Components/reviews/Reviews.js","Components/navigation/NavigationStyled.js","Components/navigation/Navigation.js","Components/header/HeaderStyled.js","Components/routes/mainRoutes.js","Components/header/Header.js","Components/routes/moviesRoutes.js","Components/pages/MovieDetailsPage.js","Components/main/MainStyled.js","Components/main/Main.js","Components/App.js","index.js","services/movies-api.js"],"names":["Cast","id","useState","cast","setCast","useEffect","fetchMoviesCast","then","length","map","item","profile_path","src","alt","name","character","Reviews","reviews","setReviews","fetchMoviesRevievs","review","author","content","NavigationContainer","styled","nav","Navigation","routes","match","className","route","to","path","activeClassName","exact","HeaderContainer","header","mainRoutes","component","lazy","Header","moviesRoutes","MovieDetailsPage","history","location","movie","setMovie","from","setFrom","getMovieById","params","movieId","muvie","state","type","onClick","push","poster_path","title","release_date","overview","genres","genry","vote_average","url","fallback","MainContainer","main","Main","App","ReactDOM","render","document","getElementById","BASE_URL","API_KEY","fetchTrendingMovies","fetch","res","json","data","results","fetchMuvieBySearchName","searchName"],"mappings":"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","file":"static/js/main.88c429bd.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n// import { useParams } from \"react-router\";\r\nimport { fetchMoviesCast } from \"../../services/movies-api.js\";\r\n\r\nconst Cast = ({ id }) => {\r\n  const [cast, setCast] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchMoviesCast(id).then(({ cast }) => {\r\n      setCast(cast);\r\n      // console.log(cast);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h2>Cast</h2>\r\n      <ul>\r\n        {cast && cast.length ? (\r\n          cast.map((item) => (\r\n            <li key={item.id}>\r\n              {item.profile_path && (\r\n                <img\r\n                  src={`https://image.tmdb.org/t/p/w200${item.profile_path}`}\r\n                  alt=\"\"\r\n                />\r\n              )}\r\n\r\n              {item.name}\r\n\r\n              <p>Character: {item.character}</p>\r\n            </li>\r\n          ))\r\n        ) : (\r\n          <h2>We don't have any reviews for this movie</h2>\r\n        )}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cast;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { fetchMoviesRevievs } from \"../../services/movies-api.js\";\r\n\r\nconst Reviews = ({ id }) => {\r\n  const [reviews, setReviews] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchMoviesRevievs(id).then((reviews) => {\r\n      setReviews([...reviews]);\r\n      // console.log(reviews);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h2>Reviews</h2>\r\n\r\n      <ul>\r\n        {reviews.map((review) => (\r\n          <li key={review.id}>\r\n            <h3>{review.author}</h3>\r\n            <p>{review.content}</p>\r\n          </li>\r\n        ))}\r\n        <h2>No reviews</h2>\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Reviews;\r\n","import styled from \"styled-components\";\r\nexport const NavigationContainer = styled.nav`\r\n  display: flex;\r\n  align-items: center;\r\n  .navigationList {\r\n    display: flex;\r\n    align-items: center;\r\n    list-style: none;\r\n  }\r\n  .navigationListItemLink {\r\n    margin: 10px;\r\n    color: #32598b;\r\n    text-decoration: none;\r\n    cursor: pointer;\r\n  }\r\n  .navigationListItemLinkActive {\r\n    color: #884040;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n// import { mainRoutes } from \"../routes/mainRoutes\";\r\nimport { NavigationContainer } from \"./NavigationStyled\";\r\n\r\nconst Navigation = ({ routes, match = \"\" }) => {\r\n  return (\r\n    <NavigationContainer>\r\n      <ul className=\"navigationList\">\r\n        {routes.map((route) => (\r\n          <li key={route.path}>\r\n            <NavLink\r\n              to={match + route.path}\r\n              className=\"navigationListItemLink\"\r\n              activeClassName=\"navigationListItemLinkActive\"\r\n              exact={route.exact}\r\n            >\r\n              {route.name}\r\n            </NavLink>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </NavigationContainer>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import styled from \"styled-components\";\r\nexport const HeaderContainer = styled.header`\r\n  height: 80px;\r\n  background-color: #cfc6c6;\r\n`;\r\n","import { lazy } from \"react\";\r\n\r\nexport const mainRoutes = [\r\n  {\r\n    name: \"Home\",\r\n    path: \"/\",\r\n    component: lazy(() =>\r\n      import(\"../pages/HomePage\" /* webpackChunkName: \"HomePage\" */)\r\n    ),\r\n    exact: true,\r\n  },\r\n\r\n  {\r\n    name: \"Movies\",\r\n    path: \"/movies\",\r\n    component: lazy(() =>\r\n      import(\"../pages/MoviesPage\" /* webpackChunkName: \"MoviesPage\" */)\r\n    ),\r\n    exact: true,\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport Navigation from \"../navigation/Navigation\";\r\nimport { HeaderContainer } from \"./HeaderStyled\";\r\nimport { mainRoutes } from \"../routes/mainRoutes\";\r\nconst Header = () => {\r\n  return (\r\n    <HeaderContainer>\r\n      <Navigation routes={mainRoutes} />\r\n    </HeaderContainer>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { lazy } from \"react\";\r\n\r\nexport const moviesRoutes = [\r\n  {\r\n    name: \"Cast\",\r\n    path: \"/cast\",\r\n    component: lazy(() =>\r\n      import(\"../cast/Cast\" /* webpackChunkName: \"Cast\" */)\r\n    ),\r\n    exact: true,\r\n  },\r\n\r\n  {\r\n    name: \"Reviews\",\r\n    path: \"/reviews\",\r\n    component: lazy(() =>\r\n      import(\"../reviews/Reviews\" /* webpackChunkName: \"Reviews\" */)\r\n    ),\r\n    exact: true,\r\n  },\r\n];\r\n","import React, { Suspense, useEffect, useState } from \"react\";\r\nimport { Route, Switch } from \"react-router\";\r\nimport { getMovieById } from \"../../services/movies-api\";\r\nimport Cast from \"../cast/Cast\";\r\nimport Navigation from \"../navigation/Navigation\";\r\nimport Reviews from \"../reviews/Reviews\";\r\nimport { moviesRoutes } from \"../routes/moviesRoutes\";\r\n\r\nconst MovieDetailsPage = ({ match, history, location }) => {\r\n  const [movie, setMovie] = useState({});\r\n  const [from, setFrom] = useState(\"\");\r\n  // console.log(from);\r\n\r\n  // console.log(parsed);\r\n\r\n  useEffect(() => {\r\n    getMovieById(match.params.movieId).then((muvie) => setMovie(muvie));\r\n  }, []);\r\n  useEffect(() => {\r\n    location.state?.from && setFrom(location.state.from);\r\n  }, [location.state]);\r\n  // console.log(movie);\r\n\r\n  return (\r\n    <>\r\n      <button type=\"button\" onClick={() => history.push(from || `/`)}>\r\n        back to Home\r\n      </button>\r\n      {movie.poster_path && (\r\n        <img\r\n          src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`}\r\n          alt=\"\"\r\n        />\r\n      )}\r\n      <h2>\r\n        {movie.title}\r\n        {`(${movie.release_date})`}\r\n      </h2>\r\n      <h2>\r\n        Overview:\r\n        <p>{movie.overview}</p>\r\n      </h2>\r\n      <h2>Genres</h2>\r\n\r\n      {movie.genres &&\r\n        movie.genres.map((genry) => <li key={genry.name}>{genry.name}</li>)}\r\n      <h2>User score: {movie.vote_average}</h2>\r\n\r\n      <Navigation routes={moviesRoutes} match={match.url} />\r\n      <Suspense fallback={<h2>.....loading</h2>}>\r\n        <Switch>\r\n          {/* {moviesRoutes.map((route) => (\r\n            <Route\r\n              id={match.params.movieId}\r\n              path={match.url + route.path}\r\n              component={route.component}\r\n              exact={route.exact}\r\n              key={route.path}\r\n            />\r\n          ))} */}\r\n          <Route path={`/movies/${match.params.movieId}/cast`}>\r\n            <Cast id={match.params.movieId} />\r\n          </Route>\r\n          <Route path={`/movies/${match.params.movieId}/reviews`}>\r\n            <Reviews id={match.params.movieId} />\r\n          </Route>\r\n        </Switch>\r\n      </Suspense>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MovieDetailsPage;\r\n","import styled from \"styled-components\";\r\nexport const MainContainer = styled.main`\r\n  background-color: #e0deba;\r\n  height: calc(100vh);\r\n`;\r\n","import React, { Suspense } from \"react\";\r\nimport { Route, Switch } from \"react-router\";\r\nimport MovieDetailsPage from \"../pages/MovieDetailsPage\";\r\nimport { mainRoutes } from \"../routes/mainRoutes\";\r\nimport { MainContainer } from \"./MainStyled\";\r\n\r\nconst Main = () => {\r\n  return (\r\n    <MainContainer>\r\n      <Suspense fallback={<h2>.....loading</h2>}>\r\n        <Switch>\r\n          <Route\r\n            path=\"/movies/:movieId\"\r\n            component={MovieDetailsPage}\r\n            exact={false}\r\n          />\r\n          {mainRoutes.map((route) => (\r\n            <Route\r\n              path={route.path}\r\n              component={route.component}\r\n              exact={route.exact}\r\n              key={route.path}\r\n            />\r\n          ))}\r\n        </Switch>\r\n      </Suspense>\r\n    </MainContainer>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport Header from \"./header/Header\";\r\nimport Main from \"./main/Main\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Main />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from \"./Components/App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n","const BASE_URL = \"https://api.themoviedb.org/3\";\r\nconst API_KEY = \"28a3a1a55be29248c28e2fe727538aaf\";\r\n\r\nexport const fetchTrendingMovies = () => {\r\n  return fetch(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=1`)\r\n    .then((res) => res.json())\r\n    .then((data) => data.results);\r\n};\r\nexport const fetchMuvieBySearchName = (searchName) => {\r\n  return fetch(\r\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${searchName}`\r\n  )\r\n    .then((res) => res.json())\r\n    .then((data) => data.results);\r\n};\r\nexport const getMovieById = (movieId) => {\r\n  return fetch(\r\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\r\n  ).then((res) => res.json());\r\n};\r\nexport const fetchMoviesCast = (movieId) => {\r\n  return fetch(`\r\n    ${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US\r\n  `).then((res) => res.json());\r\n};\r\n\r\nexport const fetchMoviesRevievs = (movieId) => {\r\n  return fetch(\r\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\r\n  )\r\n    .then((res) => res.json())\r\n    .then((data) => data.results);\r\n};\r\n"],"sourceRoot":""}